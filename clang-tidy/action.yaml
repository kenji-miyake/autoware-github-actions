name: clang-tidy
description: ""

inputs:
  rosdistro:
    description: ""
    required: true
  target-packages:
    description: ""
    required: true
  clang-tidy-config-url:
    description: ""
    required: true
  build-depends-repos:
    description: ""
    required: false
  token:
    description: ""
    required: false
    default: ${{ github.token }}

runs:
  using: composite
  steps:
    - name: Show target files
      run: |
        echo "target packages: ${{ inputs.target-packages }}"
      shell: bash

    - name: Install curl
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install curl
      shell: bash

    - name: Install pip for rosdep
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install python3-pip
      shell: bash

    - name: Install Clang-Tidy
      run: |
        sudo apt-get -yqq update
        sudo apt-get -yqq install clang-tidy
      shell: bash

    - name: Set git config
      if: ${{ inputs.build-depends-repos != ''}}
      uses: autowarefoundation/autoware-github-actions/set-git-config@v1
      with:
        token: ${{ inputs.token }}

    - name: Clone dependency packages
      if: ${{ inputs.build-depends-repos != ''}}
      run: |
        mkdir -p dependency_ws
        vcs import dependency_ws < ${{ inputs.build-depends-repos }}
      shell: bash

    - name: Run rosdep install
      run: |
        package_paths=$(colcon list -p --packages-above-and-dependencies ${{ inputs.target-packages }} --base-paths . dependency_ws)
        sudo apt-get -yqq update
        rosdep update
        DEBIAN_FRONTEND=noninteractive rosdep install -yqq --from-paths ${package_paths} --ignore-src --rosdistro ${{ inputs.rosdistro }}
      shell: bash

    - name: Restore build files from cache
      id: restore-build-files
      uses: actions/cache@v3
      with:
        path: |
          ./build
          ./install
        key: build-${{ github.sha }}

    - name: Build
      if: ${{ steps.restore-build-files.outputs.cache-hit != 'true' }}
      run: |
        . /opt/ros/${{ inputs.rosdistro }}/setup.sh
        colcon build --event-handlers console_cohesion+ \
          --packages-up-to ${{ inputs.target-packages }} \
          --cmake-args -DCMAKE_BUILD_TYPE=Release -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      shell: bash

    - name: Retrieve .clang-tidy
      run: |
        curl -fsSL -o .clang-tidy ${{ inputs.clang-tidy-config-url }} \
          -H "Authorization: token ${{ inputs.token }}"
      shell: bash

    - name: Get target files
      id: get-target-files
      run: |
        package_path=$(colcon list --paths-only --packages-select ${{ inputs.target-packages }})
        target_files=$(find $package_path -name "*.cpp" -or -name "*.hpp")
        echo ::set-output name=target-files::$target_files
      shell: bash

    - name: Analyze
      if: ${{ steps.get-target-files.outputs.target-files != '' }}
      run: |
        mkdir /tmp/clang-tidy-result
        clang-tidy -p build/ -export-fixes /tmp/clang-tidy-result/fixes.yaml ${{ steps.get-target-files.outputs.target-files }} || true
      shell: bash

    - name: Save PR metadata
      if: ${{ steps.get-target-files.outputs.target-files != '' }}
      run: |
        echo "${{ github.event.number }}" > /tmp/clang-tidy-result/pr-id.txt
        echo "${{ github.event.pull_request.head.repo.full_name }}" > /tmp/clang-tidy-result/pr-head-repo.txt
        echo "${{ github.event.pull_request.head.ref }}" > /tmp/clang-tidy-result/pr-head-ref.txt
      shell: bash

    - uses: actions/upload-artifact@v2
      if: ${{ steps.get-target-files.outputs.target-files != '' }}
      with:
        name: clang-tidy-result
        path: /tmp/clang-tidy-result/
